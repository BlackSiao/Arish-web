import{_ as e,c as t,b as n,o}from"./app-DNjG2iId.js";const s={};function r(i,a){return o(),t("div",null,[...a[0]||(a[0]=[n('<h2 id="带外和带内-out-of-band-deployment" tabindex="-1"><a class="header-anchor" href="#带外和带内-out-of-band-deployment"><span>带外和带内(Out-of-Band Deployment)</span></a></h2><p>所谓的&quot;带&quot;从中文上不好理解，但是学通信的朋友看到Band就清楚了，表明的是通信信道。</p><p>带内指的就是直接在通信信道内的，可能是整个信道的某一个几点，一般就是跑业务的，更具体一点来说，所有的业务流量都跑在带内的网卡上。而带外的信道，就不跑业务，往往都是用来做管理口的。</p><h2 id="saas-部署-saas-deployment" tabindex="-1"><a class="header-anchor" href="#saas-部署-saas-deployment"><span>SaaS 部署（SaaS Deployment）</span></a></h2><p>软件运行在厂商的云端平台上，用户只需要通过浏览器或客户端 登录即可使用，不需要额外安装硬件。</p><h2 id="应用多活" tabindex="-1"><a class="header-anchor" href="#应用多活"><span>应用多活</span></a></h2><p>应用在多个地方同时运行，多个点同时提供服务，互为备份+分担流量，是实现 高可用和容灾 的核心手段。</p><h2 id="x86-arm-amd" tabindex="-1"><a class="header-anchor" href="#x86-arm-amd"><span>x86,arm,amd</span></a></h2><ul><li>x86:它指的是一种 CPU 指令集架构（ISA），指的是 Intel 在1978年发布的 8086 处理器架构,主要被 Intel 和 AMD 用在 个人电脑、服务器 上。</li><li>AMD: 是 CPU/GPU 厂商, AMD 做的桌面/服务器 CPU，大多数是基于 x86 架构（比如 Ryzen、EPYC）。</li><li>ARM: ARM 是英国公司 Arm Ltd. 设计的一种 精简指令集架构（RISC），他只负责设置架构，不自己生成CPU。ARM一般都是在嵌入式，MAC系统上用的。</li></ul>',9)])])}const l=e(s,[["render",r]]),m=JSON.parse('{"path":"/notes/%E5%AE%9E%E6%93%8D/ee2h6oqp/","title":"黑话","lang":"zh-CN","frontmatter":{"title":"黑话","createTime":"2025/10/05 09:42:52","permalink":"/notes/实操/ee2h6oqp/"},"readingTime":{"minutes":1.2,"words":359},"git":{"createdTime":1759802183000,"updatedTime":1759802183000,"contributors":[{"name":"BlackSiao","username":"BlackSiao","email":"1546600539@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/BlackSiao?v=4","url":"https://github.com/BlackSiao"}]},"filePathRelative":"notes/实操/黑话.md","headers":[],"categoryList":[{"id":"4358b5","sort":10000,"name":"notes"},{"id":"9d4d99","sort":10001,"name":"实操"}]}');export{l as comp,m as data};
