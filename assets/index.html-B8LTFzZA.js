import{_ as s,c as t,b as n,o as r}from"./app-DNjG2iId.js";const i="/assets/switch-DJe_kAQ_.png",e={};function l(h,a){return r(),t("div",null,[...a[0]||(a[0]=[n('<hr><h2 id="_1-基础概念" tabindex="-1"><a class="header-anchor" href="#_1-基础概念"><span>1. 基础概念</span></a></h2><h3 id="_1-1-交换机-switch-是什么" tabindex="-1"><a class="header-anchor" href="#_1-1-交换机-switch-是什么"><span>1.1 交换机（Switch）是什么？</span></a></h3><p>交换机是一种工作在 <strong>数据链路层（第二层）</strong> 的网络设备，用于在局域网中根据 <strong>MAC 地址</strong> 转发数据帧，实现多个终端设备之间的高效通信。</p><hr><h3 id="_1-2-集线器-hub-与交换机的区别" tabindex="-1"><a class="header-anchor" href="#_1-2-集线器-hub-与交换机的区别"><span>1.2 集线器（Hub）与交换机的区别</span></a></h3><table><thead><tr><th>比较项</th><th>集线器（Hub）</th><th>交换机（Switch）</th></tr></thead><tbody><tr><td><strong>工作层级</strong></td><td>物理层（第一层）</td><td>数据链路层（第二层）</td></tr><tr><td><strong>数据转发方式</strong></td><td>广播：转发到所有端口</td><td>点对点：根据 MAC 地址精确转发</td></tr><tr><td><strong>同时通信能力</strong></td><td>不支持，易发生冲突</td><td>支持多端口同时通信，避免冲突</td></tr><tr><td><strong>带宽利用</strong></td><td>所有端口共享带宽，效率低</td><td>每个端口独立带宽，转发更高效</td></tr><tr><td><strong>是否学习地址表</strong></td><td>❌ 否</td><td>✅ 是，自动学习并维护 MAC 地址表（CAM 表）</td></tr></tbody></table><hr><h2 id="_2-设备通信过程详解" tabindex="-1"><a class="header-anchor" href="#_2-设备通信过程详解"><span>2. 设备通信过程详解</span></a></h2><h3 id="_2-1-通信前提" tabindex="-1"><a class="header-anchor" href="#_2-1-通信前提"><span>2.1 通信前提</span></a></h3><ul><li>主机A（<code>192.168.1.10</code>）需要与主机B（<code>192.168.1.20</code>）通信</li><li>两者在同一 VLAN 中，通过交换机连接</li><li>主机A已知主机B的 <strong>IP 地址</strong>，但不知道其 <strong>MAC 地址</strong></li></ul><hr><h3 id="_2-2-详细通信流程" tabindex="-1"><a class="header-anchor" href="#_2-2-详细通信流程"><span>2.2 详细通信流程</span></a></h3><h4 id="步骤一-arp-请求广播-寻找-mac-地址" tabindex="-1"><a class="header-anchor" href="#步骤一-arp-请求广播-寻找-mac-地址"><span>步骤一：ARP 请求广播（寻找 MAC 地址）</span></a></h4><ul><li>主机A需要封装以太网帧，但不知道B的 MAC</li><li>于是发送 <strong>ARP 请求广播帧</strong>： <ul><li>目标 MAC：<code>FF:FF:FF:FF:FF:FF</code>（广播地址）</li><li>内容：谁是 <code>192.168.1.20</code>？请告诉我你的 MAC！</li></ul></li></ul><h4 id="步骤二-交换机-泛洪-广播帧" tabindex="-1"><a class="header-anchor" href="#步骤二-交换机-泛洪-广播帧"><span>步骤二：交换机“泛洪”广播帧</span></a></h4><ul><li>交换机接收到广播帧，但无法在 MAC 表中找到目标 → 触发 <strong>泛洪机制</strong></li><li>将广播帧转发到除发送端口外的所有端口</li><li>同时，交换机学习到：<strong>主机A的 MAC 地址</strong> 来自某个端口 → 加入 MAC 地址表</li></ul><h4 id="步骤三-主机b收到-arp-请求并应答" tabindex="-1"><a class="header-anchor" href="#步骤三-主机b收到-arp-请求并应答"><span>步骤三：主机B收到 ARP 请求并应答</span></a></h4><ul><li>主机B识别 IP 地址匹配，回发 <strong>ARP 响应帧</strong>： <ul><li>源 MAC：B 的 MAC 地址</li><li>目标 MAC：A 的 MAC 地址（单播）</li></ul></li></ul><h4 id="步骤四-交换机学习-b-的-mac-地址" tabindex="-1"><a class="header-anchor" href="#步骤四-交换机学习-b-的-mac-地址"><span>步骤四：交换机学习 B 的 MAC 地址</span></a></h4><ul><li>交换机收到 ARP 响应帧，学习到 <strong>B 的 MAC</strong> → 加入 MAC 地址表</li><li>之后 A→B 的数据帧，交换机可直接点对点转发，不再广播</li></ul><h4 id="步骤五-主机a正式通信" tabindex="-1"><a class="header-anchor" href="#步骤五-主机a正式通信"><span>步骤五：主机A正式通信</span></a></h4><ul><li>主机A将数据帧目标 MAC 设置为 <strong>主机B的 MAC</strong></li><li>交换机查表找到正确端口 → 完成 <strong>高效点对点通信</strong></li></ul><hr><h3 id="mac-地址老化机制" tabindex="-1"><a class="header-anchor" href="#mac-地址老化机制"><span>MAC 地址老化机制</span></a></h3><ul><li>交换机维护的 MAC 地址表会定期老化</li><li>默认老化时间约 <strong>300 秒（5分钟）</strong></li><li>若期间未收到对应 MAC 的流量 → 表项被移除，下次通信需重新泛洪学习</li></ul><hr><h2 id="_3-补充概念与注意事项" tabindex="-1"><a class="header-anchor" href="#_3-补充概念与注意事项"><span>3. 补充概念与注意事项</span></a></h2><h3 id="_3-1-交换机是否使用-ip-地址" tabindex="-1"><a class="header-anchor" href="#_3-1-交换机是否使用-ip-地址"><span>3.1 交换机是否使用 IP 地址？</span></a></h3><ul><li>❌ 普通二层交换机不处理 IP 地址，ARP 时只负责转发广播帧</li><li>✅ 三层交换机才具备基于 IP 的转发能力（类似路由器）</li></ul><hr><h3 id="_3-2-什么是-泛洪" tabindex="-1"><a class="header-anchor" href="#_3-2-什么是-泛洪"><span>3.2 什么是“泛洪”？</span></a></h3><p><strong>泛洪（Flooding）</strong>：交换机接收到某些帧（通常是广播或未知单播）时，将其复制并转发到所有端口的过程。</p><hr><h3 id="_3-3-广播的种类" tabindex="-1"><a class="header-anchor" href="#_3-3-广播的种类"><span>3.3 广播的种类</span></a></h3><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td><strong>广播（Broadcast）</strong></td><td>目的 MAC 全 F，例如 ARP 请求</td></tr><tr><td><strong>多播（Multicast）</strong></td><td>目的 MAC 前缀为 <code>01:00:5e:xx:xx:xx</code></td></tr><tr><td><strong>未知单播（Unknown Unicast）</strong></td><td>目的 MAC 未知时，交换机临时广播（也称伪泛洪）</td></tr></tbody></table><hr><h3 id="_3-4-vlan-与接口类型" tabindex="-1"><a class="header-anchor" href="#_3-4-vlan-与接口类型"><span>3.4 VLAN 与接口类型</span></a></h3><h1 id="access-口与-trunk-口总结笔记" tabindex="-1"><a class="header-anchor" href="#access-口与-trunk-口总结笔记"><span>Access 口与 Trunk 口总结笔记</span></a></h1><h2 id="_1-基础概念-1" tabindex="-1"><a class="header-anchor" href="#_1-基础概念-1"><span>1. 基础概念</span></a></h2><h3 id="access-口" tabindex="-1"><a class="header-anchor" href="#access-口"><span>Access 口</span></a></h3><ul><li>一个端口只属于<strong>一个 VLAN</strong>。</li><li><strong>进方向（PC → SW）</strong>：交换机自动给帧打上 VLAN 标签。</li><li><strong>出方向（SW → PC）</strong>：交换机剥掉 VLAN 标签，PC 只看到普通以太网帧。</li><li><strong>特点</strong>：终端设备（PC、打印机等）对 VLAN 标签完全无感知。</li></ul><h3 id="trunk-口" tabindex="-1"><a class="header-anchor" href="#trunk-口"><span>Trunk 口</span></a></h3><ul><li>一个端口可以承载<strong>多个 VLAN</strong>的流量。</li><li><strong>进方向</strong>： <ul><li>如果帧带标签，就按标签处理；</li><li>如果没标签，则归属到该口的 <strong>native VLAN</strong>。</li></ul></li><li><strong>出方向</strong>： <ul><li>通常保留 VLAN 标签（native VLAN 的帧可以配置成不打标签）。</li></ul></li><li><strong>常用于</strong>： <ul><li>交换机与交换机之间的互联。</li><li>交换机与路由器（单臂路由）。</li><li>交换机与服务器（服务器网卡支持 VLAN Tag）。</li></ul></li></ul><h2 id="_2-使用场景" tabindex="-1"><a class="header-anchor" href="#_2-使用场景"><span>2. 使用场景</span></a></h2><h3 id="access-口-一个-vlan-对接终端" tabindex="-1"><a class="header-anchor" href="#access-口-一个-vlan-对接终端"><span>Access 口：一个 VLAN，对接终端</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>[PC]──(Access VLAN 10)──[Switch]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>特点</strong>：PC 不需要配置 VLAN，接到对应 VLAN 的端口就能通信。</li></ul><h3 id="trunk-口-多个-vlan-对接网络设备" tabindex="-1"><a class="header-anchor" href="#trunk-口-多个-vlan-对接网络设备"><span>Trunk 口：多个 VLAN，对接网络设备</span></a></h3><div class="language- line-numbers-mode" data-highlighter="shiki" data-ext="" style="--shiki-light:#393a34;--shiki-dark:#dbd7caee;--shiki-light-bg:#ffffff;--shiki-dark-bg:#121212;"><pre class="shiki shiki-themes vitesse-light vitesse-dark vp-code"><code class="language-"><span class="line"><span>[SW1]──(Trunk VLAN 10,20,30)──[SW2]</span></span></code></pre><div class="line-numbers" aria-hidden="true" style="counter-reset:line-number 0;"><div class="line-number"></div></div></div><ul><li><strong>特点</strong>：一根链路承载多个 VLAN，节省物理接口。</li></ul><h2 id="_3-交换机之间互联" tabindex="-1"><a class="header-anchor" href="#_3-交换机之间互联"><span>3. 交换机之间互联</span></a></h2><ul><li>两台交换机互联时，一般配置为 <strong>Trunk</strong>。</li><li>两端的 Trunk 口允许的 VLAN ID 必须保持一致。</li><li>VLAN 是靠 ID 区分的（名字只是说明用的），如果对端没有配置对应 VLAN ID，收到的帧会被丢弃。</li></ul><h2 id="_4-易混淆的点-重点✔" tabindex="-1"><a class="header-anchor" href="#_4-易混淆的点-重点✔"><span>4. 易混淆的点（重点✔）</span></a></h2><ul><li><strong>PC 对 VLAN 标签无感知</strong>： <ul><li>PC 发出的帧没有标签，交换机在 Access 口进来时打标签，出 Access 口时剥标签。</li></ul></li><li><strong>Trunk 口之间不会剥离 VLAN 标签</strong>： <ul><li>VLAN10 的帧从 SW1 出 Trunk 口时带着 VLAN10 标签，SW2 收到后仍然识别为 VLAN10。</li></ul></li><li><strong>Access 口</strong> = 一个 VLAN，不能同时属于多个 VLAN；如果要跑多个 VLAN，就必须用 <strong>Trunk</strong>。</li><li>交换机之间可以用 Access 口互联，但这样一条链路只能跑一个 VLAN，太浪费资源 → 实际中基本不用。</li><li>如果接口工作在 Trunk 模式，就要能识别 VLAN 标签。 比如：</li></ul><p>服务器：如果一块网卡同时跑多个 VLAN，就需要在网卡驱动里配置 VLAN Tag。这就是为啥在虚拟机平台创建虚拟机的时候要手动选择VLAN了</p><h2 id="_5-一句话总结" tabindex="-1"><a class="header-anchor" href="#_5-一句话总结"><span>5. 一句话总结</span></a></h2><ul><li><p><strong>Access</strong>：一个 VLAN，终端接入。</p></li><li><p><strong>Trunk</strong>：多个 VLAN，设备互联。</p></li><li><p><strong>应用场景</strong>：交换机互联 → Trunk；终端接入 → Access。</p></li><li><p><strong>Access 口</strong>：连接终端设备（PC、服务器），仅属于一个 VLAN</p></li><li><p><strong>Trunk 口</strong>：交换机间连接，可携带多个 VLAN 的数据帧</p></li><li><p>主机本身无需关心 VLAN，仅交换机负责处理<br><img src="'+i+'" alt="Access和Trunk"></p></li></ul><hr>',59)])])}const o=s(e,[["render",l]]),c=JSON.parse('{"path":"/notes/Internet/bh960y6g/","title":"交换机","lang":"zh-CN","frontmatter":{"title":"交换机","createTime":"2025/09/21 10:43:59","permalink":"/notes/Internet/bh960y6g/"},"readingTime":{"minutes":4.99,"words":1496},"git":{"createdTime":1759802183000,"updatedTime":1759802183000,"contributors":[{"name":"BlackSiao","username":"BlackSiao","email":"1546600539@qq.com","commits":1,"avatar":"https://avatars.githubusercontent.com/BlackSiao?v=4","url":"https://github.com/BlackSiao"}]},"filePathRelative":"notes/Internet/交换机.md","headers":[]}');export{o as comp,c as data};
